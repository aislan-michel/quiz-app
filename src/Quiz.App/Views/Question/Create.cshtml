@model Quiz.App.Models.InputModels.CreateQuestionInputModel
@{
    ViewData["Title"] = "Create";
    Layout = "_Layout";
}

<form method="post" asp-action="Create">
    <div class="mb-3">
        <label class="form-label">Text</label>
        <textarea class="form-control" name="text"></textarea>
        @Html.ValidationMessageFor(x => x.Text, "", new {@class = "invalid-feedback"})
    </div>
  
    <div class="mb-3">
        <label class="form-label">Position</label>
        <input type="number" class="form-control" name="index">
        @Html.ValidationMessageFor(x => x.Index, "", new {@class = "invalid-feedback"})
    </div>
    
    <div class="mb-3">
        <label class="form-label">Category</label>
        <select class="custom-select" name="categoryId"></select>
        @Html.ValidationMessageFor(x => x.CategoryId, "", new {@class = "invalid-feedback"})
    </div>

    <a class="btn btn-secondary" asp-action="Index">Cancel</a>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@section Scripts
{
    <script>
        $(document).ready(() => {
            $.get("/category/get", (categories) => {
                console.log(categories)
                
                let html = `<option selected disabled>Select one</option>`;                
                
                categories.forEach(category => {
                    html += `
                      <option value="${category.value}">${category.text}</option>
                    `;
                });
                
                $(".custom-select").html(html);
            });
        });
    </script>
}